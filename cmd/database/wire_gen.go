// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"context"

	"github.com/polyse/database/internal/api"
	"github.com/polyse/database/internal/collection"
)

// Injectors from wire.go:

func initWebApp(ctx context.Context, c *config) (*api.API, func(), error) {
	appConfig, err := initWebAppCfg(c)
	if err != nil {
		return nil, nil, err
	}
	app, err := api.NewApp(ctx, appConfig)
	if err != nil {
		return nil, nil, err
	}
	return app, func() {
		app.Close()
	}, nil
}

func initProcessorManager(c *config, collName collection.Name) (*collection.Manager, func(), error) {
	collectionConfig := initDbConfig(c)
	db, cleanup, err := initConnection(collectionConfig)
	if err != nil {
		return nil, nil, err
	}
	tokenizer := initTokenizer()
	v := initFilters()
	simpleProcessor := collection.NewSimpleProcessor(db, collName, tokenizer, v...)
	manager := collection.NewManagerWithProc(simpleProcessor)
	return manager, func() {
		cleanup()
	}, nil
}
